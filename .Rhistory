library(rvest)
bbalref <- "https://www.basketball-reference.com/leagues/NBA_2024_standings.html"
bbalref <- read_html("https://www.basketball-reference.com/leagues/NBA_2024_standings.html")
bballref <- read_html("https://www.basketball-reference.com/leagues/NBA_2024.html")
standings <- bballref |>
html_elements("#per_game-team tbody td")
standings
standings <- bballref |>
html_elements("#per_game-team tbody td") |>
html_text()P
standings <- bballref |>
html_elements("#per_game-team tbody td") |>
html_text()
standings
nba <- matrix(standings, ncol = 24, byrow = TRUE)
View(nba)
statnames <- bballref |>
html_elements("#per_game-team thead .center+ .center") |>
html_text()
nba <- matrix(standings, ncol = 24, byrow = TRUE) |>
tibble()
nba <- matrix(standings, ncol = 24, byrow = TRUE) |>
as_tibble()
nba <- matrix(standings, ncol = 24, byrow = TRUE) |>
as.tibble()
library(tidyverse)
nba <- matrix(standings, ncol = 24, byrow = TRUE) |>
as.tibble()
nba <- matrix(standings, ncol = 24, byrow = TRUE) |>
as_tibble()
names(nba) <- statnames
View(nba)
standings2 <- bballref |>
html_elements("advanced-team tbody .right:nth-child(4) , #advanced-team tbody th+ .left") |>
html_text()
standings2
standings2 <- bballref |>
html_elements("#advanced-team tbody .right:nth-child(4) , #advanced-team tbody th+ .left") |>
html_text()
wins <- matrix(standings, ncol = 2, byrow = TRUE) |>
as_tibble()
View(nba)
wins <- matrix(standings, ncol = 2, byrow = TRUE) |>
as_tibble() |>
rename("Team" = "V1",
"Wins" = "V2")
View(wins)
View(wins)
wins <- matrix(standings2, ncol = 2, byrow = TRUE) |>
as_tibble() |>
rename("Team" = "V1",
"Wins" = "V2")
View(wins)
nba <- nba |>
left_join(wins,
by = "Team")
nba <- nba |>
left_join(wins,
by = "Team") |>
mutate(winpct = Wins/G)
nbadf <- matrix(standings, ncol = 24, byrow = TRUE) |>
as_tibble()
names(nbadf) <- statnames
standings2 <- bballref |>
html_elements("#advanced-team tbody .right:nth-child(4) , #advanced-team tbody th+ .left") |>
html_text()
wins <- matrix(standings2, ncol = 2, byrow = TRUE) |>
as_tibble() |>
rename("Team" = "V1",
"Wins" = "V2")
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(winpct = Wins/G)
names(nbdaf)
View(nbadf)
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(where(!Team)), as.numeric)
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(where(!"Team")), as.numeric)
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(!"Team", as.numeric))
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(!"Team", as.numeric)) |>
mutate(winpct = Wins/G)
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(!"Team", as.numeric)) |>
mutate(winpct = Wins/G)
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(!"Team", as.numeric)) |>
mutate(winpct = Wins/G) |>
rename(across(everything(), tolower))
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(!"Team", as.numeric)) |>
mutate(winpct = Wins/G) |>
rename_with(tolower)
head(nba)[1:6]
model1 <- lm(winpct ~ tov,
data = nba)
model1
summary(nba$tov)
model1
summary(nba$tov)
model1
summary(nba$tov)
model1
13*.07
model1
model2 <- lm(winpct ~ tov + pf,
data = nba)
model2
model3 = lm(winpct ~ pts + ast + fg + 3p% +
model3 = lm(winpct ~ pts + ast + fg + `3p%` +
ft + trb + blk + stl,
data = nba)
model3
library(tidyverse)
library(tidyverse)
library(rvest)
library(ggthemes)
bballref <- read_html("https://www.basketball-reference.com/leagues/NBA_2024.html")
library(ggthemes)
bballref <- read_html("https://www.basketball-reference.com/leagues/NBA_2024.html")
standings <- bballref |>
html_elements("#per_game-team tbody td") |>
html_text()
bballref <- read_html("https://www.basketball-reference.com/leagues/NBA_2024.html")
standings <- bballref |>
html_elements("#per_game-team tbody td") |>
html_text()
statnames <- bballref |>
html_elements("#per_game-team thead .center+ .center") |>
html_text()
nbadf <- matrix(standings, ncol = 24, byrow = TRUE) |>
as_tibble()
statnames <- bballref |>
html_elements("#per_game-team thead .center+ .center") |>
html_text()
nbadf <- matrix(standings, ncol = 24, byrow = TRUE) |>
as_tibble()
names(nbadf) <- statnames
standings <- bballref |>
html_elements("#per_game-team tbody td") |>
html_text()
statnames <- bballref |>
html_elements("#per_game-team thead .center+ .center") |>
html_text()
nbadf <- matrix(standings, ncol = 24, byrow = TRUE) |>
as_tibble()
names(nbadf) <- statnames
standings2 <- bballref |>
html_elements("#advanced-team tbody .right:nth-child(4) , #advanced-team tbody th+ .left") |>
html_text()
wins <- matrix(standings2, ncol = 2, byrow = TRUE) |>
as_tibble() |>
rename("Team" = "V1",
"Wins" = "V2")
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(!"Team", as.numeric)) |>
mutate(winpct = Wins/G) |>
rename_with(tolower)
set.seed(02138)
nba_data <- nba[, -c(1,2, 7, 8)]
winning <- nba[, c(2)]
lasso <- glmnet(x = nba_data,
y = winning)
library(tidyverse)
library(rvest)
library(ggthemes)
bballref <- read_html("https://www.basketball-reference.com/leagues/NBA_2024.html")
statnames <- bballref |>
html_elements("#per_game-team thead .center+ .center") |>
html_text()
nbadf <- matrix(standings, ncol = 24, byrow = TRUE) |>
as_tibble()
names(nbadf) <- statnames
standings2 <- bballref |>
html_elements("#advanced-team tbody .right:nth-child(4) , #advanced-team tbody th+ .left") |>
html_text()
wins <- matrix(standings2, ncol = 2, byrow = TRUE) |>
as_tibble() |>
rename("Team" = "V1",
"Wins" = "V2")
nba <- nbadf |>
left_join(wins,
by = "Team") |>
mutate(across(!"Team", as.numeric)) |>
mutate(winpct = Wins/G) |>
rename_with(tolower)
lasso <- glmnet(x = nba_data,
y = winning)
nba_data
View(nba_data)
View(winning)
View(nba_data)
View(nba)
winning <- nba[, c(21)]
View(winning)
View(winning)
winning <- nba[, c(22)]
View(winning)
winning <- nba[, c(25)]
View(nba)
View(winning)
nba_data <- nba[, -c(1,2, 7, 8)]
View(nba_data)
names(nba)
nba_data <- nba[, -c(1,25,26)]
winning <- nba[, c(25)]
lasso <- glmnet(x = nba_data,
y = winning)
library(glmnet)
lasso <- glmnet(x = nba_data,
y = winning)
View(winning)
lasso <- glmnet(x = nba_data,
y = as.numeric(winning))
nba_data <- as.matrix(nba[, -c(1,25,26)])
winning <- as.matrix(nba[, c(25)])
lasso <- glmnet(x = nba_data,
y = winning)
View(lasso)
# plot against values of lambda
plot(sum_beta ~ lasso$lambda,
pch=16,
col="dodgerblue1",
ylab = expression(sum(beta)),
xlab = expression(lambda))
# sum absolute values of the betas
sum_beta <- colSums(abs(lasso$beta))
# plot against values of lambda
plot(sum_beta ~ lasso$lambda,
pch=16,
col="dodgerblue1",
ylab = expression(sum(beta)),
xlab = expression(lambda))
library(plotmo)
plot_glmnet(lasso)
library(tidyverse)
?mutate
library(MatchIt)
?MatchIt
?lm
data()
data(presidents)
force(presidents)
df_final <- readRDS("~/Dropbox (Harvard University)/subcommittee_appropriations/bargaining/data/df_final.rds")
names(df_final)
gov51_df <- df_final |>
select(congress, fy, year, unit, subunit, requested, pres,
median_house, pct_diff, pres_median)
library(tidyverse)
gov51_df <- df_final |>
select(congress, fy, year, unit, subunit, requested, pres,
median_house, pct_diff, pres_median)
View(gov51_df)
saveRDS(gov51_df, "gov51_df.rds")
df <- read.csv("hello.csv")
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(plyr)
library(latex2exp)
setwd("/Users/jamesjolin/Desktop/Dropbox/2024spr_gov51")
setwd("/Users/jamesjolin/Desktop/Dropbox/2024spr_gov51")
knitr::include_graphics("/Users/jamesjolin/Desktop/Dropbox/2024spr_gov51/cha.section.slides/slideinputs/pew.png")
knitr::include_graphics("/Users/jamesjolin/Desktop/Dropbox/2024spr_gov51/cha.section.slides/slideinputs/pew.png")
# Initiatialize object
obj <- data.frame(matrix(nrow = 100000, ncol = 1))
for (i in 1:100000) {
# Some computationally intensive operation
obj[,i] <- i^2+sin(i)-1000
}
# Initiatialize object
obj <- data.frame(matrix(nrow = 100000, ncol = 1))
for (i in 1:100000) {
# Some computationally intensive operation
obj[,i] <- i^2+sin(i)-1000
print(i)
}
# Initiatialize object
obj <- data.frame(matrix(nrow = 500, ncol = 1))
for (i in 1:500) {
# Some computationally intensive operation
obj[,i] <- i^2+sin(i)-1000
print(i)
}
obj
# Initiatialize object
obj <- data.frame(matrix(nrow = 500, ncol = 1))
for (i in 1:500) {
# Some computationally intensive operation
obj[i,] <- i^2+sin(i)-1000
print(i)
}
obj
constitutions
library("tm", "SnowballC")
## Import data, convert to corpus, do preprocessing
constitutions <- read.csv("data/constitutions.csv")
constitutions
constitutions$country
# Example ratings for a subset of countries
ratings <- c(3, 2, 3, 1, 3, 1, 1, 2, 3, 1, 3, 3, 1, 3, 1, 2, 2, 2, 2, 2,
3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 2, 2, 3, 3, 1, 3, 1, 3, 1, 2,
3, 3, 3, 1, 2, 2, 1, 1, 3, 3, 2, 1, 1, 1, 3, 3, 2, 3, 3, 3,
3, 3, 2, 1, 1, 3, 3, 1, 1, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 1,
1, 2, 3, 2, 2, 3, 2, 1, 3, 3, 2, 1, 1, 3, 1, 2, 2, 2, 2, 3,
3, 1, 2, 2, 3, 1, 1, 2, 1, 3, 3, 1, 2, 3, 2, 2, 1, 3, 3, 2,
1, 1, 2, 2, 3, 1, 3, 3, 2, 2, 1, 2, 2, 2, 1, 2, 3, 2, 1, 3,
1, 3, 2, 2, 1, 2, 1, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 3,
2, 2, 1, 2, 2, 1, 1, 2, 3, 1, 3, 1, 3, 1, 3, 1, 3, 3, 1, 3)
authoritarian <- ifelse(ratings == 3, "Authoritarian", "Not Authoritarian")
autho <- data.frame(Country = countries, Rating = ratings, Authoritarian = authoritarian)
# Example ratings for a subset of countries
countries <- c("afghanistan", "albania", "algeria", "andorra", "angola",
"antigua_and_barbuda", "argentina", "armenia", "azerbaijan",
"bahamas", "bahrain", "bangladesh", "barbados", "belarus",
"belize", "benin", "bhutan", "bolivia_plurinational_state_of",
"bosnia_and_herzegovina", "brazil", "brunei_darussalam",
"bulgaria", "burkina_faso", "burundi", "cambodia", "cameroon",
"cape_verde", "central_african_republic", "chad", "china",
"colombia", "comoros", "congo_democratic_republic_of_the",
"congo", "costa_rica", "cuba", "czech_republic", "djibouti",
"dominica", "dominican_republic", "ecuador", "egypt",
"equatorial_guinea", "eritrea", "estonia", "ethiopia", "fiji",
"france", "gabon", "gambia", "georgia", "germany", "ghana",
"greece", "grenada", "guatemala", "guinea", "guinea-bissau",
"guyana", "haiti", "honduras", "hungary", "india", "indonesia",
"iran_islamic_republic_of", "iraq", "ireland", "japan", "jordan",
"kazakhstan", "kenya", "kiribati", "korea_democratic_people's_republic_of",
"korea_republic_of", "kosovo", "kuwait", "kyrgyzstan",
"lao_people's_democratic_republic", "latvia", "liberia", "libya",
"liechtenstein", "lithuania", "macedonia_the_former_yugoslav_republic_of",
"madagascar", "malawi", "mali", "marshall_islands", "mauritania",
"micronesia_federated_states_of", "moldova_republic_of", "mongolia",
"montenegro", "morocco", "mozambique", "myanmar", "namibia",
"nauru", "nepal", "nicaragua", "niger", "nigeria", "pakistan",
"palau", "panama", "papua_new_guinea", "paraguay", "peru",
"philippines", "poland", "portugal", "russian_federation", "rwanda",
"saint_kitts_and_nevis", "saint_lucia", "saint_vincent_and_the_grenadines",
"samoa", "sao_tome_and_principe", "senegal", "serbia", "seychelles",
"slovakia", "slovenia", "solomon_islands", "south_africa", "south_sudan",
"spain", "sri_lanka", "sudan", "suriname", "swaziland", "switzerland",
"syrian_arab_republic", "taiwan", "tajikistan", "thailand",
"timor-leste", "togo", "tonga", "trinidad_and_tobago", "tunisia",
"turkey", "turkmenistan", "tuvalu", "uganda", "ukraine",
"united_arab_emirates", "united_republic_of_tanzania",
"united_states_of_america", "uzbekistan", "vanuatu",
"venezuela_bolivarian_republic_of", "viet_nam", "zambia", "zimbabwe")
ratings <- c(3, 2, 3, 1, 3, 1, 1, 2, 3, 1, 3, 3, 1, 3, 1, 2, 2, 2, 2, 2,
3, 1, 3, 3, 3, 3, 1, 3, 3, 3, 2, 2, 3, 3, 1, 3, 1, 3, 1, 2,
3, 3, 3, 1, 2, 2, 1, 1, 3, 3, 2, 1, 1, 1, 3, 3, 2, 3, 3, 3,
3, 3, 2, 1, 1, 3, 3, 1, 1, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 1,
1, 2, 3, 2, 2, 3, 2, 1, 3, 3, 2, 1, 1, 3, 1, 2, 2, 2, 2, 3,
3, 1, 2, 2, 3, 1, 1, 2, 1, 3, 3, 1, 2, 3, 2, 2, 1, 3, 3, 2,
1, 1, 2, 2, 3, 1, 3, 3, 2, 2, 1, 2, 2, 2, 1, 2, 3, 2, 1, 3,
1, 3, 2, 2, 1, 2, 1, 1, 3, 3, 3, 3, 3, 1, 1, 1, 3, 3, 1, 3,
2, 2, 1, 2, 2, 1, 1, 2, 3, 1, 3, 1, 3, 1, 3, 1, 3, 3, 1, 3)
authoritarian <- ifelse(ratings == 3, "Authoritarian", "Not Authoritarian")
autho <- data.frame(Country = countries, Rating = ratings, Authoritarian = authoritarian)
autho <- read.csv("data/country_authoritarian_ratings.csv")
